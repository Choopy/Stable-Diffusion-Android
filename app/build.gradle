plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

def taskRequests = getGradle().getStartParameter().getTaskRequests().toString()
def isPlay = !(taskRequests.contains("Foss") || taskRequests.contains("foss"))

if (isPlay) {
    apply from: "$project.rootDir/gradle/plugins.gradle"
}

apply from: "$project.rootDir/gradle/common.gradle"

android {
    namespace 'com.shifthackz.aisdv1.app'
    defaultConfig {
        applicationId "com.shifthackz.aisdv1.app"
        versionName "0.4.8"
        versionCode 155

        buildConfigField "String", "CLOUD_AI_URL", "\"https://sdai.moroz.cc\""
        buildConfigField "String", "HORDE_AI_URL", "\"https://stablehorde.net\""
        buildConfigField "String", "HORDE_AI_SIGN_UP_URL", "\"https://stablehorde.net/register\""
        buildConfigField "String", "UPDATE_API_URL", "\"https://sdai.moroz.cc\""
        buildConfigField "String", "DEMO_MODE_API_URL", "\"https://sdai.moroz.cc\""
        buildConfigField "String", "POLICY_URL", "\"https://sdai.moroz.cc/policy.html\""
        buildConfigField "String", "GITHUB_SOURCE_URL", "\"https://github.com/ShiftHackZ/Stable-Diffusion-Android\""
        buildConfigField "String", "SETUP_INSTRUCTIONS_URL", "\"https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki\""
    }

    def hasPropertiesFile = new File("app/keystore/signing.properties").exists()
    if (hasPropertiesFile) {
        Properties props = new Properties()
        props.load(new FileInputStream(file("keystore/signing.properties")))

        signingConfigs {
            release {
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['keystore.alias']
                keyPassword props['keystore.password']
            }
        }
        buildTypes.release.signingConfig = signingConfigs.release
    }

    flavorDimensions "type"
    productFlavors {
        foss {
            dimension "type"
            applicationIdSuffix = ".foss"
            resValue "string", "app_name", "SDAI FOSS"
            buildConfigField "String", "BUILD_FLAVOR_TYPE", "\"FOSS\""
        }
        playstore {
            dimension "type"
            resValue "string", "app_name", "SDAI"
            buildConfigField "String", "BUILD_FLAVOR_TYPE", "\"GOOGLE_PLAY\""
        }
    }
}

dependencies {
    implementation project(":core:common")
    implementation project(":core:imageprocessing")
    implementation project(":core:validation")
    implementation project(":presentation")
    implementation project(":network")
    implementation project(":storage")
    implementation project(":domain")
    implementation project(":feature:ads")
    implementation project(":feature:analytics")
    implementation project(":feature:auth")
    implementation project(":data")
    implementation project(":demo")
    implementation di.koinCore
    implementation di.koinAndroid
    implementation di.koinCompose
    implementation reactive.rxkotlin
    implementation reactive.rxandroid
    implementation log.timber

    playstoreImplementation platform(proprietary.fbBom)
    playstoreImplementation proprietary.fbA
    playstoreImplementation proprietary.fbC
    playstoreImplementation proprietary.plA
}

kapt {
    correctErrorTypes true
}
